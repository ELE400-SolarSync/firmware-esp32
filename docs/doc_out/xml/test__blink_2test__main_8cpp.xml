<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="test__blink_2test__main_8cpp" kind="file" language="C++">
    <compoundname>test_main.cpp</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes local="no">unity.h</includes>
    <incdepgraph>
      <node id="3">
        <label>unity.h</label>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="1">
        <label>/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp</label>
        <link refid="test__blink_2test__main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="test__blink_2test__main_8cpp_1a734029c5fc6508cd75bf19cd7f52b66d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int LED</definition>
        <argsstring></argsstring>
        <name>LED</name>
        <initializer>= 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="4" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__blink_2test__main_8cpp_1af27e3188294c2df66d975b74a09c001d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="45" column="9" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="test__blink_2test__main_8cpp_1a7a73978df916cacd1d18bb2cd811e56c" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t max_blinks</definition>
        <argsstring></argsstring>
        <name>max_blinks</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="46" column="9" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__blink_2test__main_8cpp_1a95c834d6178047ce9e1bce7cbfea2836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setUp</definition>
        <argsstring>(void)</argsstring>
        <name>setUp</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="6" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="6" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="test__blink_2test__main_8cpp_1a9909011e5fea0c018842eec4d93d0662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tearDown</definition>
        <argsstring>(void)</argsstring>
        <name>tearDown</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="11" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="test__blink_2test__main_8cpp_1a71ed5d08c058f52832d73d10e57236b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_led_builtin_pin_number</definition>
        <argsstring>(void)</argsstring>
        <name>test_led_builtin_pin_number</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="16" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="test__blink_2test__main_8cpp_1a2ff9f75df7fbdedf1e4d02ab2685336f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_led_state_high</definition>
        <argsstring>(void)</argsstring>
        <name>test_led_state_high</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="21" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="test__blink_2test__main_8cpp_1abf0798908a200016a437e923a63cf0f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test_led_state_low</definition>
        <argsstring>(void)</argsstring>
        <name>test_led_state_low</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="27" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="test__blink_2test__main_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="33" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="33" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="test__blink_2test__main_8cpp_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" line="48" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp" bodystart="48" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unity.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LED<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setUp(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>stuff<sp/>up<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>tearDown(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clean<sp/>stuff<sp/>up<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_led_builtin_pin_number(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>TEST_ASSERT_EQUAL(8,<sp/>LED);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_led_state_high(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>digitalWrite(LED,<sp/>HIGH);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>TEST_ASSERT_EQUAL(HIGH,<sp/>digitalRead(LED));</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test_led_state_low(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>digitalWrite(LED,<sp/>LOW);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>TEST_ASSERT_EQUAL(LOW,<sp/>digitalRead(LED));</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE!!!<sp/>Wait<sp/>for<sp/>&gt;2<sp/>secs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>board<sp/>doesn&apos;t<sp/>support<sp/>software<sp/>reset<sp/>via<sp/>Serial.DTR/RTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>delay(2000);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>pinMode(LED,<sp/>OUTPUT);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>UNITY_BEGIN();<sp/></highlight><highlight class="comment">//<sp/>IMPORTANT<sp/>LINE!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>RUN_TEST(test_led_builtin_pin_number);</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">uint8_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">uint8_t<sp/>max_blinks<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>max_blinks)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(test_led_state_high);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(500);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>RUN_TEST(test_led_state_low);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>delay(500);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>max_blinks)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>UNITY_END();<sp/></highlight><highlight class="comment">//<sp/>stop<sp/>unit<sp/>testing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/test/test_blink/test_main.cpp"/>
  </compounddef>
</doxygen>
