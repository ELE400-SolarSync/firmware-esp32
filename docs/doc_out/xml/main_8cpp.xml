<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes refid="api_8hpp" local="yes">../lib/api/src/api.hpp</includes>
    <includes refid="wifi_8hpp" local="yes">../lib/wifi/src/wifi.hpp</includes>
    <includes refid="sdcustom_8hpp" local="yes">../lib/sd/src/sdcustom.hpp</includes>
    <includes refid="log_8hpp" local="yes">../lib/log/src/log.hpp</includes>
    <includes refid="voltage__current_8hpp" local="yes">../lib/sensors/src/voltage_current.hpp</includes>
    <includes refid="dht_8hpp" local="yes">../lib/sensors/src/dht.hpp</includes>
    <incdepgraph>
      <node id="9">
        <label>SD.h</label>
      </node>
      <node id="8">
        <label>SPI.h</label>
      </node>
      <node id="15">
        <label>DHT.h</label>
      </node>
      <node id="4">
        <label>HTTPClient.h</label>
      </node>
      <node id="1">
        <label>/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>esp_log.h</label>
      </node>
      <node id="3">
        <label>../lib/api/src/api.hpp</label>
        <link refid="api_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>../lib/sd/src/sdcustom.hpp</label>
        <link refid="sdcustom_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>Adafruit_Sensor.h</label>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="13">
        <label>../lib/sensors/src/dht.hpp</label>
        <link refid="dht_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>../lib/sensors/src/voltage_current.hpp</label>
        <link refid="voltage__current_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../lib/wifi/src/wifi.hpp</label>
        <link refid="wifi_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>WiFi.h</label>
      </node>
      <node id="10">
        <label>../lib/log/src/log.hpp</label>
        <link refid="log_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="main_8cpp_1adc6e5733fc3c22f0a7b2914188c49c90" prot="public" static="no" strong="no">
        <type></type>
        <name>state</name>
        <enumvalue id="main_8cpp_1adc6e5733fc3c22f0a7b2914188c49c90a0cb1b2c6a7db1f1084886c98909a3f36" prot="public">
          <name>INIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main_8cpp_1adc6e5733fc3c22f0a7b2914188c49c90af0d8c9f2399cff44724ae7be525c8e19" prot="public">
          <name>CHECKING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main_8cpp_1adc6e5733fc3c22f0a7b2914188c49c90a314c66d3993def5d6224b9cff4d34a66" prot="public">
          <name>FETCHING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main_8cpp_1adc6e5733fc3c22f0a7b2914188c49c90adfcb5fb1201d2110fa6604e4db15d459" prot="public">
          <name>SENDING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main_8cpp_1adc6e5733fc3c22f0a7b2914188c49c90a2fd6f336d08340583bd620a7f5694c90" prot="public">
          <name>ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main_8cpp_1adc6e5733fc3c22f0a7b2914188c49c90ad6137abebe4fdc59e2f0f2c84bdbe3fa" prot="public">
          <name>SLEEP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="28" column="1" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="enum" id="main_8cpp_1a2b8aac164aaceb3a534012b0ee039685" prot="public" static="no" strong="no">
        <type></type>
        <name>dht_data</name>
        <enumvalue id="main_8cpp_1a2b8aac164aaceb3a534012b0ee039685a045158f1ef747de153f2b4bc8522149d" prot="public">
          <name>hum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main_8cpp_1a2b8aac164aaceb3a534012b0ee039685abae755da4e0fad737e044883808cfe7e" prot="public">
          <name>temp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="44" column="1" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="44" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1ab6c1b8bce29d0b257006a789a60ee233" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int current_pin_12v</definition>
        <argsstring></argsstring>
        <name>current_pin_12v</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="13" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ab19fd761356b8f1e519540002691bae8" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int voltage_pin_12v</definition>
        <argsstring></argsstring>
        <name>voltage_pin_12v</name>
        <initializer>= 33</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="14" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a27baf8a45da6dcca017536a90aab7c94" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int current_pin_5v</definition>
        <argsstring></argsstring>
        <name>current_pin_5v</name>
        <initializer>= 34</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="16" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1add741c54fef0b7fd62803743bf940fae" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int voltage_pin_5v</definition>
        <argsstring></argsstring>
        <name>voltage_pin_5v</name>
        <initializer>= 35</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="17" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a9bdda6b6c0515f6c6305c5bedf3b2681" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int current_pin_solar</definition>
        <argsstring></argsstring>
        <name>current_pin_solar</name>
        <initializer>= 36</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="19" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a0bb557c9c97474fe3d444597e76474ae" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int voltage_pin_solar</definition>
        <argsstring></argsstring>
        <name>voltage_pin_solar</name>
        <initializer>= 39</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="20" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a8cb9833b5623af50ef6f9739fb404cd3" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int current_pin_battery</definition>
        <argsstring></argsstring>
        <name>current_pin_battery</name>
        <initializer>= 25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="22" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1ae3aab624789216b2824f6db0a1afac2d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int voltage_pin_battery</definition>
        <argsstring></argsstring>
        <name>voltage_pin_battery</name>
        <initializer>= 26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="23" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aa8e9209f005f4c4b1ca6e950c0abdb47" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int relay_pin</definition>
        <argsstring></argsstring>
        <name>relay_pin</name>
        <initializer>= 27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="25" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a91fef3f23054f428342c0c39fbdcfade" prot="public" static="no" mutable="no">
        <type>state</type>
        <definition>state current_state</definition>
        <argsstring></argsstring>
        <name>current_state</name>
        <initializer>= INIT</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="36" column="7" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1af56a67b48df438851bd546da2d79e713" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool show_data</definition>
        <argsstring></argsstring>
        <name>show_data</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="39" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1af160844e59accfb2748f513411e55725" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int sd_size</definition>
        <argsstring></argsstring>
        <name>sd_size</name>
        <initializer>= 32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="40" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a6433a0990e70c0f5a215a0418f00dc0c" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int dh11_pin</definition>
        <argsstring></argsstring>
        <name>dh11_pin</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="43" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1af14d5d226fe3599c47b4e829f57037eb" prot="public" static="no" mutable="no">
        <type>float *</type>
        <definition>float* dht_values</definition>
        <argsstring></argsstring>
        <name>dht_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="45" column="7" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a93cdab0c7807a8e2eb9dffd189b409ef" prot="public" static="no" mutable="no">
        <type>unsigned long int</type>
        <definition>unsigned long int start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="48" column="19" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a567db6392b90f85daf2048a6c65da3c5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int us_to_s_factor</definition>
        <argsstring></argsstring>
        <name>us_to_s_factor</name>
        <initializer>= 1000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="49" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a35c9e7108a5130b509468cba37b6615a" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int time_to_sleep</definition>
        <argsstring></argsstring>
        <name>time_to_sleep</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="50" column="5" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a69284b0c98536e354d795b3a279c55d9" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int time_period</definition>
        <argsstring></argsstring>
        <name>time_period</name>
        <initializer>= 60</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="51" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aec5f2fb4a0765ffcece948f54aafe458" prot="public" static="no" mutable="no">
        <type>RTC_DATA_ATTR int</type>
        <definition>RTC_DATA_ATTR int log_info[2]</definition>
        <argsstring>[2]</argsstring>
        <name>log_info</name>
        <initializer>= {0, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="53" column="19" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a49ced89738689327d75f765eca5ce1ed" prot="public" static="no" mutable="no">
        <type><ref refid="classwifi__connection" kindref="compound">wifi_connection</ref></type>
        <definition>wifi_connection wifi(&quot;Siri-al_killer&quot;, &quot;15112001&quot;)</definition>
        <argsstring>(&quot;Siri-al_killer&quot;, &quot;15112001&quot;)</argsstring>
        <name>wifi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="58" column="17"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aaa4a6506433e578b91475a3dae642569" prot="public" static="no" mutable="no">
        <type><ref refid="classapi__lib" kindref="compound">api_lib</ref></type>
        <definition>api_lib api</definition>
        <argsstring></argsstring>
        <name>api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="59" column="9" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a444485cdf049a95fde9ad505e8a82c47" prot="public" static="no" mutable="no">
        <type><ref refid="classSDCustom" kindref="compound">SDCustom</ref></type>
        <definition>SDCustom sd(sd_size)</definition>
        <argsstring>(sd_size)</argsstring>
        <name>sd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="61" column="10"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a5da4dfda1fc0694c8123041effebdd37" prot="public" static="no" mutable="no">
        <type><ref refid="classmyLogger" kindref="compound">myLogger</ref></type>
        <definition>myLogger logger(sd)</definition>
        <argsstring>(sd)</argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="62" column="10"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a46e52692c0a7c37beb1628af3f5c7fca" prot="public" static="no" mutable="no">
        <type><ref refid="classDHTSensor" kindref="compound">DHTSensor</ref></type>
        <definition>DHTSensor dht_sensor(dh11_pin)</definition>
        <argsstring>(dh11_pin)</argsstring>
        <name>dht_sensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="64" column="11"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a60183c2472dc5c9d87706847e2ac4448" prot="public" static="no" mutable="no">
        <type><ref refid="classCurrentSensor" kindref="compound">CurrentSensor</ref></type>
        <definition>CurrentSensor current_12v(current_pin_12v)</definition>
        <argsstring>(current_pin_12v)</argsstring>
        <name>current_12v</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="66" column="15"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a4fb70fb3879be33350d1a3fcb4cb4dd0" prot="public" static="no" mutable="no">
        <type><ref refid="classVoltageSensor" kindref="compound">VoltageSensor</ref></type>
        <definition>VoltageSensor voltage_12v(voltage_pin_12v)</definition>
        <argsstring>(voltage_pin_12v)</argsstring>
        <name>voltage_12v</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="67" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1a6064b01c8aec8e446d40ef94187a2638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void deepSleep</definition>
        <argsstring>(int sleepTime)</argsstring>
        <name>deepSleep</name>
        <param>
          <type>int</type>
          <declname>sleepTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="230" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="230" bodyend="243" declfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" declline="72" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a73b1494c82884e261fd8a1163ebc2f63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String get_wakeup_reason</definition>
        <argsstring>()</argsstring>
        <name>get_wakeup_reason</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="210" column="8" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="210" bodyend="228" declfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" declline="73" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1ae85f069042042f486771e16e80d4ab4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SerialEvent</definition>
        <argsstring>()</argsstring>
        <name>SerialEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="198" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="198" bodyend="208" declfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" declline="74" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="79" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="79" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="108" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="108" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lib/api/src/api.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lib/wifi/src/wifi.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lib/sd/src/sdcustom.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lib/log/src/log.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lib/sensors/src/voltage_current.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lib/sensors/src/dht.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>Global<sp/>variable<sp/>************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Voltage<sp/>and<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_pin_12v<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voltage_pin_12v<sp/>=<sp/>33;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_pin_5v<sp/>=<sp/>34;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voltage_pin_5v<sp/>=<sp/>35;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_pin_solar<sp/>=<sp/>36;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voltage_pin_solar<sp/>=<sp/>39;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_pin_battery<sp/>=<sp/>25;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>voltage_pin_battery<sp/>=<sp/>26;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>relay_pin<sp/>=<sp/>27;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>State<sp/>machine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>state<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>INIT,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECKING,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>FETCHING,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>SENDING,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>ERROR,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>SLEEP</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal">state<sp/>current_state<sp/>=<sp/>INIT;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show_data<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sd_size<sp/>=<sp/>32;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DHT11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dh11_pin<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>dht_data<sp/>{<sp/>hum,<sp/>temp<sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dht_values;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deep<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>us_to_s_factor<sp/>=<sp/>1000000;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_to_sleep<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_period<sp/>=<sp/>60;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">RTC_DATA_ATTR<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_info[2]<sp/>=<sp/>{0,<sp/>0};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*********************<sp/>Objects<sp/>*****************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="classwifi__connection" kindref="compound">wifi_connection</ref><sp/>wifi(</highlight><highlight class="stringliteral">&quot;Siri-al_killer&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;15112001&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="classapi__lib" kindref="compound">api_lib</ref><sp/>api;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="classSDCustom" kindref="compound">SDCustom</ref><sp/>sd(sd_size);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="classmyLogger" kindref="compound">myLogger</ref><sp/>logger(sd);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="classDHTSensor" kindref="compound">DHTSensor</ref><sp/>dht_sensor(dh11_pin);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="classCurrentSensor" kindref="compound">CurrentSensor</ref><sp/>current_12v(current_pin_12v);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="classVoltageSensor" kindref="compound">VoltageSensor</ref><sp/>voltage_12v(voltage_pin_12v);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*********************<sp/>Prototype<sp/>***************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deepSleep(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sleepTime);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">String<sp/>get_wakeup_reason();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SerialEvent();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/******************<sp/>Setup<sp/>and<sp/>Looop<sp/>************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>logger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>logger.setLogFile(log_info[0]);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>logger.setOldLogFile(log_info[1]);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>logger.setOldLogFile(0);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>logger.<ref refid="classmyLogger_1ad23b181afe0eccf231701068912277f2" kindref="member">init</ref>();<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>logger.setLevel(myLogger::level_t::DEBUG);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>logger.disableLoggingInSD();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>logger.enableLoggingInMonitor();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>wifi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>logger.<ref refid="classmyLogger_1a40c793a254de92079c7f499d03f48937" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;SETUP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Wifi<sp/>status<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(wifi.<ref refid="classwifi__connection_1a33816fba6968e02098085e7d6c52708b" kindref="member">connect</ref>(10000)));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>wifi.<ref refid="classwifi__connection_1a33816fba6968e02098085e7d6c52708b" kindref="member">connect</ref>(10000);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>api.<ref refid="classapi__lib_1a2ae88643c58b39abed46e97d9048f0d8" kindref="member">setHost</ref>(</highlight><highlight class="stringliteral">&quot;https://api.thingspeak.com/update?api_key=72ZH5DA3WVKUD5R5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>deep<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>logger.<ref refid="classmyLogger_1a8c6c7b9d1f97103979be317fe8fe83bf" kindref="member">info</ref>(</highlight><highlight class="stringliteral">&quot;SETUP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Wakeup<sp/>reason<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>get_wakeup_reason());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>sensors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>current_12v.<ref refid="classCurrentSensor_1a8ae1886601163983335879062e8a96b9" kindref="member">setup</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>voltage_12v.<ref refid="classVoltageSensor_1a33fcc58d10cb07ac560f1e65476895cb" kindref="member">setup</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>current_state<sp/>=<sp/>CHECKING;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop()<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>SerialEvent();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>start<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(current_state)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CHECKING:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a8c6c7b9d1f97103979be317fe8fe83bf" kindref="member">info</ref>(</highlight><highlight class="stringliteral">&quot;CHECKING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;CHECKING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sd.<ref refid="classSDCustom_1a4e7ea8dab9a1cd3930d3c735b2d49d86" kindref="member">isSDInserted</ref>())<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.disableLoggingInSD();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a17871fca537c8609a3ac8c7c2bb9719e" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;CHECKING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SD<sp/>Card<sp/>is<sp/>not<sp/>inserted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.enableLoggingInSD();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a40c793a254de92079c7f499d03f48937" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;CHECKING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SD<sp/>Card<sp/>is<sp/>inserted&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wifi.isConnected())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a40c793a254de92079c7f499d03f48937" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;CHECKING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Wifi<sp/>is<sp/>connected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_state<sp/>=<sp/>FETCHING;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a17871fca537c8609a3ac8c7c2bb9719e" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;CHECKING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Wifi<sp/>is<sp/>not<sp/>connected&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_state<sp/>=<sp/>ERROR;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FETCHING:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a8c6c7b9d1f97103979be317fe8fe83bf" kindref="member">info</ref>(</highlight><highlight class="stringliteral">&quot;FETCHING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;FETCHING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dht_values<sp/>=<sp/>dht_sensor.<ref refid="classDHTSensor_1a9985d82a04364cec6d944b89aebd3e6a" kindref="member">getValues</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dht_sensor.<ref refid="classDHTSensor_1a96b074c0c0a7b95010bc49303d94b62c" kindref="member">isCorrect_values</ref>(dht_values))<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a17871fca537c8609a3ac8c7c2bb9719e" kindref="member">error</ref>(</highlight><highlight class="stringliteral">&quot;FETCHING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DHT11<sp/>values<sp/>are<sp/>incorrect&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_state<sp/>=<sp/>ERROR;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a40c793a254de92079c7f499d03f48937" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;FETCHING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DHT11<sp/>values<sp/>are<sp/>correct&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_state<sp/>=<sp/>SENDING;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SENDING:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a8c6c7b9d1f97103979be317fe8fe83bf" kindref="member">info</ref>(</highlight><highlight class="stringliteral">&quot;SENDING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SENDING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*data;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[0]<sp/>=<sp/>dht_values[temp];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[1]<sp/>=<sp/>dht_values[hum];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structapi__lib_1_1response" kindref="compound">api_lib::response</ref><sp/>res;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>api.<ref refid="classapi__lib_1accc43a805690ddfa8c4da98588b0ab24" kindref="member">sendAll</ref>(data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res.code<sp/>==<sp/>200)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a40c793a254de92079c7f499d03f48937" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;SENDING&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Return<sp/>message<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>res.data);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_state<sp/>=<sp/>SLEEP;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERROR:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a8c6c7b9d1f97103979be317fe8fe83bf" kindref="member">info</ref>(</highlight><highlight class="stringliteral">&quot;ERROR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;ERROR<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_state<sp/>=<sp/>SLEEP;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SLEEP:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>time_to_sleep<sp/>=<sp/>time_period<sp/>-<sp/>(start<sp/>-<sp/>millis())<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>esp_sleep_enable_timer_wakeup(time_to_sleep<sp/>*<sp/>us_to_s_factor);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a8c6c7b9d1f97103979be317fe8fe83bf" kindref="member">info</ref>(</highlight><highlight class="stringliteral">&quot;SLEEP&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Time<sp/>to<sp/>sleep:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>String(time_to_sleep)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>seconds&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log_info[0]<sp/>=<sp/>logger.getLogFile();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>log_info[1]<sp/>=<sp/>logger.getOldLogFile();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deepSleep(time_to_sleep);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>logger.<ref refid="classmyLogger_1a40c793a254de92079c7f499d03f48937" kindref="member">debug</ref>(</highlight><highlight class="stringliteral">&quot;DEFAULT&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;DEFAULT<sp/>state&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/*********************<sp/>Functions<sp/>***************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">/***********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SerialEvent()<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Serial.available())<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>inChar<sp/>=<sp/>Serial.readString();</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inChar.indexOf(</highlight><highlight class="stringliteral">&quot;date&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;lol&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(inChar.indexOf(</highlight><highlight class="stringliteral">&quot;show_data&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>-1){</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>show_data<sp/>=<sp/>!show_data;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">String<sp/>get_wakeup_reason()<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>esp_sleep_wakeup_cause_t<sp/>wakeup_reason;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>wakeup_reason<sp/>=<sp/>esp_sleep_get_wakeup_cause();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>String<sp/>reason;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(wakeup_reason)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_SLEEP_WAKEUP_EXT0<sp/>:<sp/>reason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Wakeup<sp/>caused<sp/>by<sp/>external<sp/>signal<sp/>using<sp/>RTC_IO&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_SLEEP_WAKEUP_EXT1<sp/>:<sp/>reason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Wakeup<sp/>caused<sp/>by<sp/>external<sp/>signal<sp/>using<sp/>RTC_CNTL&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_SLEEP_WAKEUP_TIMER<sp/>:<sp/>reason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Wakeup<sp/>caused<sp/>by<sp/>timer&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_SLEEP_WAKEUP_TOUCHPAD<sp/>:<sp/>reason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Wakeup<sp/>caused<sp/>by<sp/>touchpad&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ESP_SLEEP_WAKEUP_ULP<sp/>:<sp/>reason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Wakeup<sp/>caused<sp/>by<sp/>ULP<sp/>program&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>default<sp/>:<sp/>reason<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Wakeup<sp/>was<sp/>not<sp/>caused<sp/>by<sp/>deep<sp/>sleep:<sp/>%d\n&quot;</highlight><highlight class="normal">,wakeup_reason;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reason;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deepSleep(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sleepTime)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disconnect<sp/>from<sp/>Wi-Fi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>wifi.disconnect();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>wifi.setModeOff();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disable<sp/>Bluetooth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>btStop();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>sleep<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>esp_sleep_enable_timer_wakeup(sleepTime<sp/>*<sp/>us_to_s_factor);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enter<sp/>deep<sp/>sleep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>esp_deep_sleep_start();</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp"/>
  </compounddef>
</doxygen>
