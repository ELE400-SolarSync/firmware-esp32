<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">Arduino.h</includes>
    <includes refid="api_8hpp" local="yes">../lib/api/src/api.hpp</includes>
    <includes refid="wifi_8hpp" local="yes">../lib/wifi/src/wifi.hpp</includes>
    <incdepgraph>
      <node id="4">
        <label>string</label>
      </node>
      <node id="5">
        <label>HTTPClient.h</label>
      </node>
      <node id="1">
        <label>/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp</label>
        <link refid="main_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>../lib/api/src/api.hpp</label>
        <link refid="api_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Arduino.h</label>
      </node>
      <node id="6">
        <label>../lib/wifi/src/wifi.hpp</label>
        <link refid="wifi_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>WiFi.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8cpp_1a5b66db9bb535aa0aff4c15415bb51f8a" prot="public" static="no" mutable="no">
        <type><ref refid="classwifi__connection" kindref="compound">wifi_connection</ref></type>
        <definition>wifi_connection wifi(&quot;LakeLaogai&quot;, &quot;thereisnowifiinbasingse&quot;)</definition>
        <argsstring>(&quot;LakeLaogai&quot;, &quot;thereisnowifiinbasingse&quot;)</argsstring>
        <name>wifi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="6" column="17"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1aaa4a6506433e578b91475a3dae642569" prot="public" static="no" mutable="no">
        <type><ref refid="classapi__lib" kindref="compound">api_lib</ref></type>
        <definition>api_lib api</definition>
        <argsstring></argsstring>
        <name>api</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="7" column="9" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a656b8d50e4036b8ae51663e47beea58d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int debug</definition>
        <argsstring></argsstring>
        <name>debug</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="10" column="11" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8cpp_1a5ab54995772ff96d303a45287001664f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int connection_status</definition>
        <argsstring></argsstring>
        <name>connection_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="12" column="5" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8cpp_1ae85f069042042f486771e16e80d4ab4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SerialEvent</definition>
        <argsstring>()</argsstring>
        <name>SerialEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="48" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="48" bodyend="63" declfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" declline="16" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1a4fc01d736fe50cf5b977f755b675f11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="19" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="19" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="main_8cpp_1afe461d27b9c48d5921c00d521181f12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" line="31" column="6" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp" bodystart="31" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;Arduino.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lib/api/src/api.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../lib/wifi/src/wifi.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><ref refid="classwifi__connection" kindref="compound">wifi_connection</ref><sp/>wifi(</highlight><highlight class="stringliteral">&quot;LakeLaogai&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;thereisnowifiinbasingse&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><ref refid="classapi__lib" kindref="compound">api_lib</ref><sp/>api;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>Variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>debug<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>connection_status;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Prototyping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SerialEvent();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setup<sp/>and<sp/>Loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup()<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>Serial.begin(115200);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!Serial)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>delay(1000);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>connection_status<sp/>=<sp/>wifi.<ref refid="classwifi__connection_1a52afbfc28143e9cc24a8a7c0d7cadf02" kindref="member">connect</ref>(10000);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>api.<ref refid="classapi__lib_1a2ae88643c58b39abed46e97d9048f0d8" kindref="member">setHost</ref>(</highlight><highlight class="stringliteral">&quot;https://api.thingspeak.com/update?api_key=72ZH5DA3WVKUD5R5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>loop()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>polling<sp/>for<sp/>serial<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>SerialEvent();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(debug)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;Connection<sp/>status:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(wifi.<ref refid="classwifi__connection_1ac88d5e9c734f8dd272cfc05a4c6bda08" kindref="member">getStatus</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;IP<sp/>Address:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(wifi.<ref refid="classwifi__connection_1acc6036c49974f5fdba7c76ea5987944b" kindref="member">getIP</ref>());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>data[]<sp/>=<sp/>{1.0,<sp/>2.0,<sp/>3.0};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>api.<ref refid="classapi__lib_1ab9b8efe44c87dcf29d6690f9a599752e" kindref="member">sendAmp</ref>(data,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(data[0]));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>delay(1000);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SerialEvent()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(Serial.available())<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>inChar<sp/>=<sp/>Serial.readString();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inChar<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;hello,<sp/>world!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inChar<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;wifi_ip&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(</highlight><highlight class="stringliteral">&quot;IP<sp/>Address:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(wifi.<ref refid="classwifi__connection_1acc6036c49974f5fdba7c76ea5987944b" kindref="member">getIP</ref>());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;Command<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}<sp/></highlight></codeline>
    </programlisting>
    <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/src/main.cpp"/>
  </compounddef>
</doxygen>
