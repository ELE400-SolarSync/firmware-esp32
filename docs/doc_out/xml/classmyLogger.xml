<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classmyLogger" kind="class" language="C++" prot="public">
    <compoundname>myLogger</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="classmyLogger_1a620d3b72f294167f4b46d39603b0050a" prot="private" static="no" strong="no">
        <type></type>
        <name>roll_t</name>
        <enumvalue id="classmyLogger_1a620d3b72f294167f4b46d39603b0050aabb4e2223cf5baafe12cb5712b1f04236" prot="private">
          <name>SWITCH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmyLogger_1a620d3b72f294167f4b46d39603b0050aa9e72a2caf1adbd9c2302556eddd71321" prot="private">
          <name>DELETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="18" column="9" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="18" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3" prot="public" static="no" strong="no">
        <type></type>
        <name>level_t</name>
        <enumvalue id="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3a7db0cb7cc61024f2eec804c2e0e876a1" prot="public">
          <name>DEBUG</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3a488012f79de3dcb30c1b10396dd9c1eb" prot="public">
          <name>INFO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3a4d29b61c13eb26429df979e4079c65d8" prot="public">
          <name>WARN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3a5daf24fb42cc67025dd386cd53e73e4d" prot="public">
          <name>ERROR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="24" column="9" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="24" bodyend="29"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmyLogger_1a1784ee188ca570a677ba982da62a1ba1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int myLogger::log_path</definition>
        <argsstring></argsstring>
        <name>log_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="10" column="13" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmyLogger_1a95219c23b5a2a5cef51a8d3708fa2266" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int myLogger::log_file</definition>
        <argsstring></argsstring>
        <name>log_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="11" column="13" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmyLogger_1a951c4197d84d547109655776c4034f64" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int myLogger::oldest_log_file</definition>
        <argsstring></argsstring>
        <name>oldest_log_file</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="12" column="13" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmyLogger_1ac6dab3853d0fbc4e690692015cdaa2b6" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String myLogger::log_fullPath</definition>
        <argsstring></argsstring>
        <name>log_fullPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="13" column="16" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmyLogger_1a1b1213a3ed2bd31b52ddd707ec070566" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool myLogger::SerialToglle</definition>
        <argsstring></argsstring>
        <name>SerialToglle</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="14" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmyLogger_1a9b1e8d4c8d5100740e1c30900cbafc97" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool myLogger::SDToglle</definition>
        <argsstring></argsstring>
        <name>SDToglle</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="15" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmyLogger_1a94a06539e3ddb1c4151bfbe18ff722da" prot="private" static="no" mutable="no">
        <type><ref refid="classSDCustom" kindref="compound">SDCustom</ref> &amp;</type>
        <definition>SDCustom&amp; myLogger::sd</definition>
        <argsstring></argsstring>
        <name>sd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="16" column="18" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classmyLogger_1aa814101f085bfffdf200553a1c7ecda4" prot="public" static="no" mutable="no">
        <type>level_t</type>
        <definition>level_t myLogger::logLevel</definition>
        <argsstring></argsstring>
        <name>logLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="30" column="17" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmyLogger_1a32d215e499371a3cf3cca5da8d609ac9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>myLogger::myLogger</definition>
        <argsstring>(SDCustom &amp;sd, int log_file=0, int log_path=0, level_t level=INFO)</argsstring>
        <name>myLogger</name>
        <param>
          <type><ref refid="classSDCustom" kindref="compound">SDCustom</ref> &amp;</type>
          <declname>sd</declname>
        </param>
        <param>
          <type>int</type>
          <declname>log_file</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>log_path</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>level_t</type>
          <declname>level</declname>
          <defval>INFO</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="32" column="9" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1ad23b181afe0eccf231701068912277f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
<para>Initialise the logger. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="40" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="40" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1abf786e116ad9dfb51cd806b982efe8c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>level_t</type>
        <definition>level_t myLogger::getLevel</definition>
        <argsstring>() const</argsstring>
        <name>getLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="53" column="17" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1abacd100fa3dba269632711eb99b93a78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int myLogger::getLogPath</definition>
        <argsstring>() const</argsstring>
        <name>getLogPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="57" column="13" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1af440d46190f823c9817c610a4ed88f34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int myLogger::getLogFile</definition>
        <argsstring>() const</argsstring>
        <name>getLogFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="61" column="13" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1af9939ab221cd5f31aef73c0698bb4df3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::setOldLogFile</definition>
        <argsstring>(int old_log)</argsstring>
        <name>setOldLogFile</name>
        <param>
          <type>int</type>
          <declname>old_log</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="65" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a3fa4f3b7654558a947030871fff9c674" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int myLogger::getOldLogFile</definition>
        <argsstring>() const</argsstring>
        <name>getOldLogFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="69" column="13" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a788d188e5793d9ef71086e9395125890" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::setLogPath</definition>
        <argsstring>(int log_path)</argsstring>
        <name>setLogPath</name>
        <param>
          <type>int</type>
          <declname>log_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="73" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a5e56d3c12eda6da1bf2daeb7a18ee86b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::setLogFile</definition>
        <argsstring>(int log_file)</argsstring>
        <name>setLogFile</name>
        <param>
          <type>int</type>
          <declname>log_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="77" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a4d2badf28ebc5dd6ea179a137c2981c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::setLogFullPath</definition>
        <argsstring>()</argsstring>
        <name>setLogFullPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="81" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a92c5f02994cb4e1aeae89f9a90285abf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::setLevel</definition>
        <argsstring>(level_t level)</argsstring>
        <name>setLevel</name>
        <param>
          <type>level_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="85" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a17871fca537c8609a3ac8c7c2bb9719e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::error</definition>
        <argsstring>(String tag, String message)</argsstring>
        <name>error</name>
        <param>
          <type>String</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Function to write error log. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>First part to identify where comes the log </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="95" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a18b71c939cf9dba82b82f50accee8ebe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::warning</definition>
        <argsstring>(String tag, String message)</argsstring>
        <name>warning</name>
        <param>
          <type>String</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Function to write warning log. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>First part to identify where comes the log </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="105" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a8c6c7b9d1f97103979be317fe8fe83bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::info</definition>
        <argsstring>(String tag, String message)</argsstring>
        <name>info</name>
        <param>
          <type>String</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Function to write info log. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>First part to identify where comes the log </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="117" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a40c793a254de92079c7f499d03f48937" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::debug</definition>
        <argsstring>(String tag, String message)</argsstring>
        <name>debug</name>
        <param>
          <type>String</type>
          <declname>tag</declname>
        </param>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Function to write debug log. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>First part to identify where comes the log </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="129" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a28a78a7aa80cae651aa2237173fea04c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::enableLoggingInMonitor</definition>
        <argsstring>()</argsstring>
        <name>enableLoggingInMonitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="135" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1af7d5212f2b1c3542f9ee9c254cbfb3fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::disableLoggingInMonitor</definition>
        <argsstring>()</argsstring>
        <name>disableLoggingInMonitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="139" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a7d8873f9d6363ec7eb5e8370fc808dce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::enableLoggingInSD</definition>
        <argsstring>()</argsstring>
        <name>enableLoggingInSD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="143" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1aa512e6fbf1f072284b36d3f986349ca0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::disableLoggingInSD</definition>
        <argsstring>()</argsstring>
        <name>disableLoggingInSD</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="147" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a5efaa4d4be16db5b09aa9fe4bc98ae96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::log</definition>
        <argsstring>(String logFormat, String message)</argsstring>
        <name>log</name>
        <param>
          <type>String</type>
          <declname>logFormat</declname>
        </param>
        <param>
          <type>String</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Main function to write the log. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>Format of the log </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>Message to log </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="157" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="157" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1aef4b5776ac10f03a1db79489a67d4d19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>String</type>
        <definition>String myLogger::buildlogFormat</definition>
        <argsstring>(String logTag, String level)</argsstring>
        <name>buildlogFormat</name>
        <param>
          <type>String</type>
          <declname>logTag</declname>
        </param>
        <param>
          <type>String</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="187" column="16" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1a40ea6555afcb5446ef0ac0db8d730319" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::logRoll</definition>
        <argsstring>(roll_t roll)</argsstring>
        <name>logRoll</name>
        <param>
          <type>roll_t</type>
          <declname>roll</declname>
        </param>
        <briefdescription>
<para>Roll the log, if size is too big or if there is too much files. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>roll</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument to know if we need to switch file or delete the oldest one </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="196" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="196" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1ae45b9bf34211c752ecf50d55f6f3588b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::deleteOldestFile</definition>
        <argsstring>()</argsstring>
        <name>deleteOldestFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="206" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classmyLogger_1aff9c31db40b2335c966f452ef7706e37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void myLogger::createNewFile</definition>
        <argsstring>()</argsstring>
        <name>createNewFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="211" column="14" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="211" bodyend="215"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" line="8" column="1" bodyfile="/home/pierr/Documents/ETS/ele400/firmware-esp32/lib/log/src/log.hpp" bodystart="8" bodyend="216"/>
    <listofallmembers>
      <member refid="classmyLogger_1aef4b5776ac10f03a1db79489a67d4d19" prot="public" virt="non-virtual"><scope>myLogger</scope><name>buildlogFormat</name></member>
      <member refid="classmyLogger_1aff9c31db40b2335c966f452ef7706e37" prot="public" virt="non-virtual"><scope>myLogger</scope><name>createNewFile</name></member>
      <member refid="classmyLogger_1a40c793a254de92079c7f499d03f48937" prot="public" virt="non-virtual"><scope>myLogger</scope><name>debug</name></member>
      <member refid="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3a7db0cb7cc61024f2eec804c2e0e876a1" prot="public" virt="non-virtual"><scope>myLogger</scope><name>DEBUG</name></member>
      <member refid="classmyLogger_1a620d3b72f294167f4b46d39603b0050aa9e72a2caf1adbd9c2302556eddd71321" prot="private" virt="non-virtual"><scope>myLogger</scope><name>DELETE</name></member>
      <member refid="classmyLogger_1ae45b9bf34211c752ecf50d55f6f3588b" prot="public" virt="non-virtual"><scope>myLogger</scope><name>deleteOldestFile</name></member>
      <member refid="classmyLogger_1af7d5212f2b1c3542f9ee9c254cbfb3fe" prot="public" virt="non-virtual"><scope>myLogger</scope><name>disableLoggingInMonitor</name></member>
      <member refid="classmyLogger_1aa512e6fbf1f072284b36d3f986349ca0" prot="public" virt="non-virtual"><scope>myLogger</scope><name>disableLoggingInSD</name></member>
      <member refid="classmyLogger_1a28a78a7aa80cae651aa2237173fea04c" prot="public" virt="non-virtual"><scope>myLogger</scope><name>enableLoggingInMonitor</name></member>
      <member refid="classmyLogger_1a7d8873f9d6363ec7eb5e8370fc808dce" prot="public" virt="non-virtual"><scope>myLogger</scope><name>enableLoggingInSD</name></member>
      <member refid="classmyLogger_1a17871fca537c8609a3ac8c7c2bb9719e" prot="public" virt="non-virtual"><scope>myLogger</scope><name>error</name></member>
      <member refid="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3a5daf24fb42cc67025dd386cd53e73e4d" prot="public" virt="non-virtual"><scope>myLogger</scope><name>ERROR</name></member>
      <member refid="classmyLogger_1abf786e116ad9dfb51cd806b982efe8c4" prot="public" virt="non-virtual"><scope>myLogger</scope><name>getLevel</name></member>
      <member refid="classmyLogger_1af440d46190f823c9817c610a4ed88f34" prot="public" virt="non-virtual"><scope>myLogger</scope><name>getLogFile</name></member>
      <member refid="classmyLogger_1abacd100fa3dba269632711eb99b93a78" prot="public" virt="non-virtual"><scope>myLogger</scope><name>getLogPath</name></member>
      <member refid="classmyLogger_1a3fa4f3b7654558a947030871fff9c674" prot="public" virt="non-virtual"><scope>myLogger</scope><name>getOldLogFile</name></member>
      <member refid="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3a488012f79de3dcb30c1b10396dd9c1eb" prot="public" virt="non-virtual"><scope>myLogger</scope><name>INFO</name></member>
      <member refid="classmyLogger_1a8c6c7b9d1f97103979be317fe8fe83bf" prot="public" virt="non-virtual"><scope>myLogger</scope><name>info</name></member>
      <member refid="classmyLogger_1ad23b181afe0eccf231701068912277f2" prot="public" virt="non-virtual"><scope>myLogger</scope><name>init</name></member>
      <member refid="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3" prot="public" virt="non-virtual"><scope>myLogger</scope><name>level_t</name></member>
      <member refid="classmyLogger_1a5efaa4d4be16db5b09aa9fe4bc98ae96" prot="public" virt="non-virtual"><scope>myLogger</scope><name>log</name></member>
      <member refid="classmyLogger_1a95219c23b5a2a5cef51a8d3708fa2266" prot="private" virt="non-virtual"><scope>myLogger</scope><name>log_file</name></member>
      <member refid="classmyLogger_1ac6dab3853d0fbc4e690692015cdaa2b6" prot="private" virt="non-virtual"><scope>myLogger</scope><name>log_fullPath</name></member>
      <member refid="classmyLogger_1a1784ee188ca570a677ba982da62a1ba1" prot="private" virt="non-virtual"><scope>myLogger</scope><name>log_path</name></member>
      <member refid="classmyLogger_1aa814101f085bfffdf200553a1c7ecda4" prot="public" virt="non-virtual"><scope>myLogger</scope><name>logLevel</name></member>
      <member refid="classmyLogger_1a40ea6555afcb5446ef0ac0db8d730319" prot="public" virt="non-virtual"><scope>myLogger</scope><name>logRoll</name></member>
      <member refid="classmyLogger_1a32d215e499371a3cf3cca5da8d609ac9" prot="public" virt="non-virtual"><scope>myLogger</scope><name>myLogger</name></member>
      <member refid="classmyLogger_1a951c4197d84d547109655776c4034f64" prot="private" virt="non-virtual"><scope>myLogger</scope><name>oldest_log_file</name></member>
      <member refid="classmyLogger_1a620d3b72f294167f4b46d39603b0050a" prot="private" virt="non-virtual"><scope>myLogger</scope><name>roll_t</name></member>
      <member refid="classmyLogger_1a94a06539e3ddb1c4151bfbe18ff722da" prot="private" virt="non-virtual"><scope>myLogger</scope><name>sd</name></member>
      <member refid="classmyLogger_1a9b1e8d4c8d5100740e1c30900cbafc97" prot="private" virt="non-virtual"><scope>myLogger</scope><name>SDToglle</name></member>
      <member refid="classmyLogger_1a1b1213a3ed2bd31b52ddd707ec070566" prot="private" virt="non-virtual"><scope>myLogger</scope><name>SerialToglle</name></member>
      <member refid="classmyLogger_1a92c5f02994cb4e1aeae89f9a90285abf" prot="public" virt="non-virtual"><scope>myLogger</scope><name>setLevel</name></member>
      <member refid="classmyLogger_1a5e56d3c12eda6da1bf2daeb7a18ee86b" prot="public" virt="non-virtual"><scope>myLogger</scope><name>setLogFile</name></member>
      <member refid="classmyLogger_1a4d2badf28ebc5dd6ea179a137c2981c1" prot="public" virt="non-virtual"><scope>myLogger</scope><name>setLogFullPath</name></member>
      <member refid="classmyLogger_1a788d188e5793d9ef71086e9395125890" prot="public" virt="non-virtual"><scope>myLogger</scope><name>setLogPath</name></member>
      <member refid="classmyLogger_1af9939ab221cd5f31aef73c0698bb4df3" prot="public" virt="non-virtual"><scope>myLogger</scope><name>setOldLogFile</name></member>
      <member refid="classmyLogger_1a620d3b72f294167f4b46d39603b0050aabb4e2223cf5baafe12cb5712b1f04236" prot="private" virt="non-virtual"><scope>myLogger</scope><name>SWITCH</name></member>
      <member refid="classmyLogger_1ac711e3c653fa61bfe2bd19b723b608c3a4d29b61c13eb26429df979e4079c65d8" prot="public" virt="non-virtual"><scope>myLogger</scope><name>WARN</name></member>
      <member refid="classmyLogger_1a18b71c939cf9dba82b82f50accee8ebe" prot="public" virt="non-virtual"><scope>myLogger</scope><name>warning</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
